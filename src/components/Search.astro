---
---
<div id="search-component">
  <button id="search-button" aria-label="Open search" class="p-2">
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-search"><circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line></svg>
  </button>

  <dialog id="search-dialog" class="p-4 bg-gray-900 text-white rounded-lg shadow-lg w-full max-w-2xl mx-auto mt-20 backdrop:bg-black/50">
    <div class="flex justify-between items-center mb-4">
      <h2 class="text-xl font-bold">Search</h2>
      <button id="close-dialog-button" aria-label="Close search" class="p-2">&times;</button>
    </div>
    <input type="text" id="search-input" placeholder="Search for courses, case studies..." class="w-full p-2 mb-4 bg-gray-800 border border-gray-700 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
    <ul id="search-results" class="space-y-2"></ul>
  </dialog>
</div>

<script>
  import Fuse from 'fuse.js';

  document.addEventListener('DOMContentLoaded', () => {
    const searchButton = document.getElementById('search-button');
    const searchDialog = document.getElementById('search-dialog') as HTMLDialogElement;
    const closeDialogButton = document.getElementById('close-dialog-button');
    const searchInput = document.getElementById('search-input') as HTMLInputElement;
    const searchResults = document.getElementById('search-results');

    let fuse;

    // Fetch data and initialize Fuse.js
    fetch('/search.json')
      .then(response => response.json())
      .then(data => {
        fuse = new Fuse(data, {
          keys: ['title', 'content'],
          includeScore: true,
          threshold: 0.4,
        });
      });

    // Event Listeners
    searchButton.addEventListener('click', () => {
      searchDialog.showModal();
      searchInput.focus();
    });

    closeDialogButton.addEventListener('click', () => {
      searchDialog.close();
    });

    searchInput.addEventListener('input', (e) => {
      if (!fuse) return;
      const query = (e.target as HTMLInputElement).value;
      if (query.length < 2) {
        searchResults.innerHTML = '';
        return;
      }
      const results = fuse.search(query);
      displayResults(results);
    });

    function displayResults(results) {
      searchResults.innerHTML = '';
      if (results.length === 0) {
          searchResults.innerHTML = '<li class="text-gray-400">No results found.</li>';
          return;
      }
      results.slice(0, 10).forEach(result => {
        const li = document.createElement('li');
        li.innerHTML = `
          <a href="${result.item.url}" class="block p-4 bg-gray-800 hover:bg-gray-700 rounded-md transition-colors">
            <h3 class="font-semibold text-lg">${result.item.title}</h3>
            <p class="text-sm text-gray-400">${result.item.type}</p>
          </a>
        `;
        searchResults.appendChild(li);
      });
    }
  });
</script>
